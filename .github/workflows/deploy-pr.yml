name: PR Preview

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

permissions:
  contents: read
  pages: write
  id-token: write
  pull-requests: write

jobs:
  preview:
    runs-on: ubuntu-latest
    environment:
      name: preview
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v2
        with:
          version: 9

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build with PR specific path
        run: pnpm build
        env:
          NEXT_PUBLIC_BASE_PATH: /github-pages-sample/pr-preview/${{ github.event.pull_request.number }}

      - name: Configure Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: out
          name: pr-${{ github.event.pull_request.number }}

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: pr-${{ github.event.pull_request.number }}
          preview: true

      - name: Comment PR
        uses: actions/github-script@v7
        with:
          script: |
            const baseUrl = '${{ steps.deployment.outputs.page_url }}';
            const prPath = '/pr-preview/${{ github.event.pull_request.number }}';
            const url = baseUrl.replace(/\/$/, '') + prPath;
            
            const message = `ðŸš€ Preview environment is ready!

            URL: ${url}`;
            
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.data.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('Preview environment')
            );
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: message
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: message
              });
            }