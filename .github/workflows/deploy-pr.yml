name: Deploy PR Preview
on:
  pull_request:
    types: [opened, synchronize, reopened, closed]

permissions:
  contents: read
  pages: write
  id-token: write
  pull-requests: write

concurrency:
  group: pr-${{ github.event.pull_request.number }}
  cancel-in-progress: true

env:
  PR_NUMBER: ${{ github.event.pull_request.number }}

jobs:
  deploy-preview:
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest
    environment:
      name: github-pages
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v2
        with:
          version: 9

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm build
        env:
          IS_PREVIEW: "true"
          PR_NUMBER: ${{ github.event.pull_request.number }}

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: out
          name: pr-${{ github.event.pull_request.number }}

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: pr-${{ github.event.pull_request.number }}
          preview: true

      - name: Comment PR
        uses: actions/github-script@v7
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const url = `https://${owner}.github.io/${repo}/pr-preview-${process.env.PR_NUMBER}`;
            
            const message = `ðŸš€ Preview environment is ready!\n\nURL: ${url}`;
            
            const comments = await github.rest.issues.listComments({
              owner,
              repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.data.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('Preview environment')
            );
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner,
                repo,
                comment_id: botComment.id,
                body: message
              });
            } else {
              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number: context.issue.number,
                body: message
              });
            }

  cleanup:
    if: github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Delete preview deployment
        run: |
          echo "PR was closed, preview environment will be automatically cleaned up."